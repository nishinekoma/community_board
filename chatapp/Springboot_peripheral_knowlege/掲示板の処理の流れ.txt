Springboot開始
↓
初期化されるオブジェクト開始　データ等　xmlやymlとかの設定ファイル　beanをコンテナに格納したり
GetMappingサーバtomcat起動したり　自動でこれら開始
↓
http://localhost:8080/user/login
↓
成功後　ログイン・サインアップ

login画面
    -- accountない場合 signupに切り替え　登録と同時にログイン
        --htmlからaction開始→UserController.java始動
            -- 初期　@GetMapping
            -- データ入力語　@PostMapping
    --　accountある場合　login画面からログインする。
↓           -- 初動上と同じ
            -- 成功時　：board.html

掲示板処理
    --  board.html
            -- @GetMappingでデータ取得
                -- この時commet取得しデータをタイムリーフ経由表示
                -- コメント入力フォーム初期化。オブジェクト準備
                -- 規律反したらエラー出る。
            -- @PostMappingでデータを送信
                -- 元からのデータをDI（外部受け取り）で取得かつコメントも取得
                -- データ入力されたものをaddObectで追加。属性名commentForm(htmlで指定し受け取る。)
                -- 書いたもの大丈夫かチェック。
                -- その後return new ModelAndView("redirect:/board");で
                　　更新されたModelAndViewをnewして作り@GetMappingされて表示取得

12/02
あすやること
signupで登録したメールアドレスとUserIDを連結させ、掲示板でもう一回ログインした
時にメールアドレスを元に探してメールアドレスとUserIDを表示
12/03
今日
登録時signup時
    課題１
        signup時に送信されたAUTHORITIESテーブルからUSER＿IDとMailを
        新しいテーブルに登録する必要がある。
        掲示板に送信しないとUserCommentに登録されない。

    対策
        新しいテーブルをクリエイトしておいて　MailとAUTHORITIESテーブルからUSER＿IDを抽出し
        新しいテーブルに保存しておく。そして紐ずけする。

        で、掲示板で送信する時に@Validated @ModelAttributeで受け取りMailとAUTHORITIESを新しいテーブルから
        USER_IDもキーに紐図ける抽出し、それを掲示板で表示する。しかない。


signup

USERCommentテーブルに登録しないといけないので。
AUTHORITIESテーブルのUSER_IDとUSER_COMMENTテーブルのMailAddress
の紐ずけをする
    工程
    ・login内のhtmlのsignupを編集、二つのth;object分岐しデータを別々送信する
        ・一括で送信したいためjsを使う。
    
    ---- データベースに保存することはできた

    ・メールアドレスとして確認する。
    ---- クリア
    ・重複しているかの確認。    $$ now
        ・signup自
        ・UserCommentDatasourceのmethod relationwrite 内で行う
            ・チェックメソッド
                ・重複あり　：エラーを返す。
                    ・既に登録されています！！　と　表示桁数を表示する
                        ・html th:if="${#fields.hasErrors('mailForm.mailAddress')}" th:errors="${mailForm.mailAddress}">email Error</span>
                        　に渡す。
                ・重複なし
                    ・userForm.setMailAddressメソッドで登録実行。
                        
    ・掲示板にコメント投稿時にUser_IDをキーにしてmailaddressを探しそれを表示する。
        ・BordControllerで//保存の時に処理を追加。

        ・送信されたもう一つのデータをjavaの@(/signup)で受け取り
            ・mailaddressが重複してないかデータを探し
                〇　そのまま登録処理
                ✖　このメールアドレスは登録されてますと表示する。

    ・データを違うテーブルに登録。User_IDとmailaddressの紐づけ
                    登録処理をする。
    ・
ログアウト時

login時

